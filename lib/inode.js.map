{"version":3,"sources":["../src/inode.js"],"names":["reservedNameKey","reservedChildrenKey","reservedArgsKey","reservedValueKeys","hashre","dollarRE","__vnode_context","getType","node","cc","constructor","Array","Object","name","test","undefined","type","Number","Boolean","vnode","parent","depth","indexInParent","key","value","$key","VNode","cx","create","nameOrValue","val","join","get","idx","has","_nextOrPrev","dir","entries","kv","$value","next","previous","push","k","v","set","removeChild","child","splice","cached","children","len","length","cache","i","keys","values","map","finalize","count","first","last","lastItem","filter","modify","ref","toJS","x","reduce","acc","valueOf","_elemToString","e","attrFunc","z","str","c","stringify","prettifier","a"],"mappings":"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","sourcesContent":["import { VNode } from \"./vnode\";\r\n\r\nimport multimap from \"./multimap\";\r\n\r\nimport { serialize } from \"./doctype\";\r\n\r\nimport { isBranch, hasName } from \"./type\";\r\n\r\n// import self!\r\nimport * as cx from \"./inode\";\r\n\r\n// helpers ---------------\r\n\r\n//import { q } from \"./qname\";\r\n\r\nconst reservedNameKey = \"$name\"; //[1,2,9,11,14]\r\nconst reservedChildrenKey = \"$children\"; //[1,9,11]\r\nconst reservedArgsKey = \"$args\"; //[14,15]\r\nconst reservedValueKeys = {\r\n\t2:\"$value\",\r\n\t4:\"$ref\",\r\n\t7:\"$pi\",\r\n\t8:\"$comment\",\r\n\t10:\"$doctype\"\r\n};\r\n\r\nconst hashre = /^#/;\r\n\r\nconst dollarRE = /^\\$/;\r\n// -----------------------\r\n\r\n/**\r\n * Interface for modules that represent a tree structure.\r\n *\r\n * @interface Node\r\n */\r\n\r\n/**\r\n * Mark the modules as a node construction context\r\n * @type {String}\r\n */\r\nexport const __vnode_context = \"inode\";\r\n\r\n\r\n/**\r\n * Get the type of a node as a L3 type constant ranging from 1 to 17\r\n * @function\r\n * @name Node#getType\r\n * @param {any}  node a 'node' according to this interface\r\n * @return {Number} L3 type constant\r\n */\r\n\r\nexport function getType(node) {\r\n\tif (node === null) return 12;\r\n\tvar cc = node.constructor;\r\n\tif (cc == Array) {\r\n\t\treturn 5;\r\n\t} else if (cc == Object) {\r\n\t\tif (reservedChildrenKey in node) {\r\n\t\t\tconst name = node[reservedNameKey];\r\n\t\t\treturn !hashre.test(name) ? 1 : name == \"#document\" ? 9 : 11;\r\n\t\t} else if (reservedArgsKey in node) {\r\n\t\t\treturn node[reservedNameKey] !== undefined ? 14 : 15;\r\n\t\t}\r\n\t\tfor(let type in reservedValueKeys) {\r\n\t\t\tif(reservedValueKeys[type] in node) return type;\r\n\t\t}\r\n\t\treturn 6;\r\n\t} else if (cc == Number || cc == Boolean) {\r\n\t\treturn 12;\r\n\t}\r\n\treturn 3;\r\n}\r\n\r\n/**\r\n * [vnode description]\r\n * @param  {any} node          [description]\r\n * @param  {VNode} parent        [description]\r\n * @param  {Number} depth         [description]\r\n * @param  {Number} indexInParent [description]\r\n * @param  {Number} type          [description]\r\n * @return {VNode}               [description]\r\n */\r\nexport function vnode(node, parent, depth, indexInParent, type) {\r\n\ttype = type || getType(node);\r\n\tlet name,key,value;\r\n\tif (isBranch(type)) {\r\n\t\tname = node[reservedNameKey];\r\n\t} else if (type == 2) {\r\n\t\tname = node[reservedNameKey];\r\n\t\tvalue = node[reservedValueKeys[2]];\r\n\t\t// this ensures pairs are iterated as their values (if no $key use attr node for construction)\r\n\t\tif (node.$key) {\r\n\t\t\tkey = node.$key;\r\n\t\t\tnode = value;\r\n\t\t\ttype = getType(node);\r\n\t\t}\r\n\t} else if(type == 3 || type == 12) {\r\n\t\tvalue = node;\r\n\t} else {\r\n\t\tvalue = node[reservedValueKeys[type]];\r\n\t}\r\n\treturn new VNode(cx, node, type, name, key, value, parent, depth, indexInParent);\r\n}\r\n\r\nexport function create(type, nameOrValue) {\r\n\tif(type == 5) return [];\r\n\tif(type == 6) return {};\r\n\tif(type == 3 || type == 12) return nameOrValue;\r\n\tconst node = {};\r\n\tif(hasName(type)) node[reservedNameKey] = nameOrValue;\r\n\tif (type == 1 || type == 9 || type == 11) {\r\n\t\tnode[reservedChildrenKey] = [];\r\n\t} else if(type == 14 || type == 15) {\r\n\t\tnode[reservedArgsKey] = [];\r\n\t} else if(type == 2) {\r\n\t\t// value will be inserted later\r\n\t\tnode[reservedValueKeys[2]] = void 0;\r\n\t} else {\r\n\t\tconst val = type == 7 ? nameOrValue.join(\" \") : type == 10 ? serialize(...nameOrValue) : nameOrValue;\r\n\t\tnode[reservedValueKeys[type]] = val;\r\n\t}\r\n\treturn node;\r\n}\r\n\r\nexport function get(node,idx,type){\r\n\ttype = type || getType(node);\r\n\tif(type == 6) {\r\n\t\treturn node[idx];\r\n\t}\r\n\tif(type == 14 || type == 15){\r\n\t\treturn node[reservedArgsKey][idx];\r\n\t}\r\n\treturn node[reservedChildrenKey][idx];\r\n}\r\n\r\nexport function has(node,idx,type) {\r\n\ttype = type || getType(node);\r\n\tif(type == 5 || type == 6) {\r\n\t\treturn idx in node;\r\n\t}\r\n\tif(type == 14 || type == 15){\r\n\t\treturn idx in node[reservedArgsKey];\r\n\t}\r\n\treturn idx in node[reservedChildrenKey];\r\n}\r\n\r\nvar _nextOrPrev = function _nextOrPrev(node, idx, type, dir) {\r\n\ttype = type || getType(node);\r\n\tif (type == 1 || type == 9 || type == 11) {\r\n\t\treturn node[reservedChildrenKey][idx + dir];\r\n\t}\r\n\tif (type == 14 || type == 15) {\r\n\t\treturn node[reservedArgsKey][idx + dir];\r\n\t}\r\n\tif (type == 5) return node[idx + dir];\r\n\tif (type == 6) {\r\n\t\tvar entries = Object.entries(node);\r\n\t\tvar kv = entries[idx + dir];\r\n\t\t// pass pair-wise\r\n\t\treturn { $key: kv[0], $value: kv[1] };\r\n\t}\r\n};\r\n\r\nexport function next(node, vnode, type) {\r\n\treturn _nextOrPrev(node, vnode.indexInParent - 1, type, 1);\r\n}\r\n\r\nexport function previous(node, vnode, type) {\r\n\treturn _nextOrPrev(node, vnode.indexInParent - 1, type, -1);\r\n}\r\n\r\nexport function push(node, [k,v], type) {\r\n\ttype = type || getType(node);\r\n\tif (type == 1 || type == 9 || type == 11) {\r\n\t\tnode[reservedChildrenKey].push(v);\r\n\t} else if (type == 14 || type == 15) {\r\n\t\tnode[reservedChildrenKey].push(v);\r\n\t} else if (type == 5) {\r\n\t\tnode.push(v);\r\n\t} else if (type == 6) {\r\n\t\tnode[k] = v;\r\n\t}\r\n\treturn node;\r\n}\r\n\r\nexport function set(node,key,val,type) {\r\n\ttype = type || getType(node);\r\n\tif(type == 1 || type == 6) {\r\n\t\tnode[key] = val;\r\n\t\treturn node;\r\n\t}\r\n\treturn node;\r\n}\r\n\r\nexport function removeChild(node, child, type) {\r\n\ttype = type || getType(node);\r\n\tif (type == 1 || type == 9 || type == 11) {\r\n\t\tnode[reservedChildrenKey].splice(child.indexInParent, 1);\r\n\t} else if (type == 5) {\r\n\t\tnode.splice(child.indexInParent, 1);\r\n\t} else if (type == 6) {\r\n\t\tdelete node[child.key];\r\n\t} else if (type == 14 || type == 15) {\r\n\t\tnode[reservedArgsKey].splice(child.indexInParent, 1);\r\n\t}\r\n\treturn node;\r\n}\r\n\r\nexport function cached(node, type) {\r\n\ttype = type || getType(node);\r\n\tif (type == 1 || type == 9 || type == 11) {\r\n\t\tlet children = node[reservedChildrenKey],\r\n\t\t\tlen = children.length,\r\n\t\t\tcache = multimap();\r\n\t\tfor (var i = 0; i < len; i++) {\r\n\t\t\tcache.push([children[i][reservedNameKey] || i + 1, children[i]]);\r\n\t\t}\r\n\t\treturn cache;\r\n\t}\r\n\tif (type == 5) {\r\n\t\treturn {\r\n\t\t\tkeys: function keys() {\r\n\t\t\t\treturn node.keys();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\tif (type == 6) {\r\n\t\treturn {\r\n\t\t\tkeys: function keys() {\r\n\t\t\t\treturn Object.keys(node);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport function keys(node, type) {\r\n\ttype = type || getType(node);\r\n\tif (type == 1 || type == 9) {\r\n\t\tlet children = node[reservedChildrenKey],\r\n\t\t\tlen = children.length,\r\n\t\t\tkeys = [];\r\n\t\tfor (var i = 0; i < len; i++) {\r\n\t\t\tkeys[i] = children[i][reservedNameKey] || i + 1;\r\n\t\t}\r\n\t\treturn keys;\r\n\t}\r\n\tif (type == 5) return node.keys();\r\n\tif (type == 6) return Object.keys(node);\r\n\treturn [];\r\n}\r\n\r\nexport function values(node, type) {\r\n\ttype = type || getType(node);\r\n\tif (type == 1 || type == 9 || type == 11) return node[reservedChildrenKey];\r\n\tif (type == 14 || type == 15) return node[reservedArgsKey];\r\n\tif (type == 2) return [[node[reservedNameKey], node[reservedValueKeys[2]]]];\r\n\tif (type == 6)\r\n\t\t// pair-wise\r\n\t\treturn Object.entries(node).map(function (kv) {\r\n\t\t\treturn { $key: kv[0], $value: kv[1] };\r\n\t\t});\r\n\tif(type == 3 || type == 12) return [node];\r\n\treturn [node[reservedValueKeys[type]]];\r\n}\r\n\r\nexport function finalize(node) {\r\n\treturn node;\r\n}\r\n\r\nexport function count(node, type) {\r\n\ttype = type || getType(node);\r\n\tif (type == 1 || type == 9 || type == 11) {\r\n\t\treturn node[reservedChildrenKey].length;\r\n\t} else if (type == 14 || type == 15) {\r\n\t\treturn node[reservedArgsKey].length;\r\n\t} else if (type == 5) {\r\n\t\treturn node.length;\r\n\t} else if (type == 6) {\r\n\t\treturn Object.keys(node).length;\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\nexport function first(node, type) {\r\n\ttype = type || getType(node);\r\n\tif (type == 1 || type == 9 || type == 11) {\r\n\t\treturn node[reservedChildrenKey][0];\r\n\t} else if (type == 14 || type == 15) {\r\n\t\treturn node[reservedArgsKey][0];\r\n\t} else if (type == 5) {\r\n\t\treturn node[0];\r\n\t} else if (type == 6) {\r\n\t\tvar entries = Object.entries(node);\r\n\t\tvar kv = entries[0];\r\n\t\t// pass pair-wise\r\n\t\treturn { $key: kv[0], $value: kv[1] };\r\n\t}\r\n}\r\n\r\nexport function last(node, type) {\r\n\ttype = type || getType(node);\r\n\tif (type == 1 || type == 9 || type == 11) return node[reservedChildrenKey].lastItem;\r\n\tif (type == 5) return node.lastItem;\r\n\tif (type == 6) {\r\n\t\tvar entries = Object.entries(node);\r\n\t\tvar kv = entries.lastItem;\r\n\t\t// pass pair-wise\r\n\t\treturn { $key: kv[0], $value: kv[1] };\r\n\t}\r\n\tif (type == 14 || type == 15) return node[reservedArgsKey].lastItem;\r\n}\r\n\r\nexport function entries(node, type) {\r\n\ttype = type || getType(node);\r\n\tif(type == 5) return node.entries();\r\n\tif(type == 6) return Object.entries(node);\r\n\tif (type == 1 || type == 6 || type == 9 || type == 11) return Object.entries(node).filter(([k]) => !dollarRE.test(k));\r\n\treturn [];\r\n}\r\n\r\nexport function modify(node, vnode, ref, type) {\r\n\ttype = type || getType(node);\r\n\tif (type == 1 || type == 9 || type == 11) {\r\n\t\tif (vnode.type == 2) {\r\n\t\t\t// TODO conversion rules!\r\n\t\t\tnode[vnode.name] = vnode.node.$value + \"\";\r\n\t\t} else if (ref !== undefined) {\r\n\t\t\tnode[reservedChildrenKey].splice(ref.indexInParent, 0, vnode.node);\r\n\t\t} else {\r\n\t\t\tnode[reservedChildrenKey].push(vnode.node);\r\n\t\t}\r\n\t} else if (type == 14 || type == 15) {\r\n\t\tif (ref !== undefined) {\r\n\t\t\tnode[reservedArgsKey].splice(ref.indexInParent, 0, vnode.node);\r\n\t\t} else {\r\n\t\t\tnode[reservedArgsKey].push(vnode.node);\r\n\t\t}\r\n\t} else if (type == 2) {\r\n\t\tnode[reservedValueKeys[2]] = vnode.node;\r\n\t} else if (type == 5) {\r\n\t\tif (ref !== undefined) {\r\n\t\t\tnode.splice(ref.indexInParent, 0, vnode.node);\r\n\t\t} else {\r\n\t\t\tnode.push(vnode.node);\r\n\t\t}\r\n\t} else if (type == 6) {\r\n\t\tnode[vnode.name] = vnode.node[reservedValueKeys[2]];\r\n\t}\r\n\treturn node;\r\n}\r\n\r\nexport function toJS(node,type) {\r\n\ttype = type || getType(node);\r\n\tif(type == 5) {\r\n\t\treturn node.map(x => toJS(x));\r\n\t} else if(type == 6) {\r\n\t\treturn Object.entries(node).reduce((acc,[k,v]) => {\r\n\t\t\tacc[k] = toJS(v);\r\n\t\t\treturn acc;\r\n\t\t},{});\r\n\t} else {\r\n\t\treturn node.valueOf();\r\n\t}\r\n}\r\n\r\n\r\nfunction _elemToString(e) {\r\n\tconst attrFunc = (z, [k,v]) => {\r\n\t\tif(/^\\$/.test(k)) return z;\r\n\t\treturn z + (\" \" + k + \"=\\\"\" + v + \"\\\"\");\r\n\t};\r\n\tconst name = e[reservedNameKey];\r\n\tvar str = \"<\" + name;\r\n\tstr = Object.entries(e).reduce(attrFunc, str);\r\n\tconst children = e[reservedChildrenKey];\r\n\tif (children.length > 0) {\r\n\t\tstr += \">\";\r\n\t\tfor(let c of children){\r\n\t\t\tstr += stringify(c);\r\n\t\t}\r\n\t\tstr += \"</\" + name + \">\";\r\n\t} else {\r\n\t\tstr += \"/>\";\r\n\t}\r\n\treturn str;\r\n}\r\n\r\n// FIXME XML or HTML?\r\n// TODO ref type\r\nexport function stringify(node, type, prettifier) {\r\n\tvar str = \"\";\r\n\ttype = type || getType(node);\r\n\tif (type == 1) {\r\n\t\tstr += _elemToString(node);\r\n\t} else if(type == 9 || type == 11) {\r\n\t\tstr = node[reservedChildrenKey].map(c => stringify(c)).join(\"\");\r\n\t} else if (type == 2) {\r\n\t\tstr += \"<l3:a name=\\\"\" + node.$key + \"\\\">\" + stringify(node.$value) + \"</l3:a>\";\r\n\t} else if (type == 5) {\r\n\t\tconst val = node.map(c => stringify(c)).join(\"\");\r\n\t\tstr += \"<l3:l\" + (val ? \">\" + val + \"</l3:l>\" : \"/>\");\r\n\t} else if (type == 6) {\r\n\t\tconst val = Object.entries(node).reduce(function (a,c) {\r\n\t\t\treturn a + stringify({ $key: c[0], $value: stringify(c[1]) });\r\n\t\t},\"\");\r\n\t\tstr += \"<l3:m\" + (val ? \">\" + val + \"</l3:m>\" : \"/>\");\r\n\t} else if (type == 14 || type == 15) {\r\n\t\tconst val = node[reservedArgsKey].reduce((a,c) => a + stringify(c),\"\");\r\n\t\tif(type == 14) {\r\n\t\t\tstr += \"<l3:f name=\\\"\" + node[reservedNameKey] + \"\\\"\" + (val ? \">\" + val + \"</l3:f>\" : \"/>\");\r\n\t\t} else {\r\n\t\t\tstr += \"<l3:q\" + (val ? \">\" + val + \"</l3:q>\" : \"/>\");\r\n\t\t}\r\n\t} else {\r\n\t\tif (type == 7) {\r\n\t\t\tstr += \"<?\" + node[reservedValueKeys[7]] + \"?>\";\r\n\t\t} else if (type == 8) {\r\n\t\t\tstr += \"<!--\" + node[reservedValueKeys[8]] + \"-->\";\r\n\t\t} else if (type == 10) {\r\n\t\t\tstr += \"<!DOCTYPE \"+node[reservedValueKeys[10]]+\">\";\r\n\t\t} else {\r\n\t\t\tconst val = node === null ? \"null\" : node;\r\n\t\t\tstr += type == 12 ? \"<l3:x>\" + val + \"</l3:x>\" : val;\r\n\t\t}\r\n\t}\r\n\treturn prettifier ? prettifier(str) : str;\r\n}\r\n"],"file":"inode.js"}