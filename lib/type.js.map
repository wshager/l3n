{"version":3,"sources":["../src/type.js"],"names":["isLeaf","type","isBranch","isClose","hasName","hasChildren","hasArgs"],"mappings":";;;;;;;AAAA;;;;;AAKA;;;;;AAKO,MAAMA,SAAS,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;AAC3C,SAAOA,QAAQ,CAAR,IAAaA,QAAQ,CAArB,IAA0BA,QAAQ,CAAlC,IAAuCA,QAAQ,CAA/C,IAAoDA,QAAQ,CAA5D,IAAiEA,QAAQ,EAAzE,IAA+EA,QAAQ,EAAvF,IAA6FA,QAAQ,EAA5G;AACA,CAFM;AAIP;;;;;;;;;AAKO,MAAMC,WAAW,SAASA,QAAT,CAAkBD,IAAlB,EAAwB;AAC/C,SAAOA,QAAQ,CAAR,IAAaA,QAAQ,CAArB,IAA0BA,QAAQ,CAAlC,IAAuCA,QAAQ,CAA/C,IAAoDA,QAAQ,EAA5D,IAAkEA,QAAQ,EAA1E,IAAgFA,QAAQ,EAA/F;AACA,CAFM;AAIP;;;;;;;;;AAKO,MAAME,UAAUF,QAAQA,QAAQ,EAAhC;;;;AAEA,MAAMG,UAAUH,QAAQA,QAAQ,CAAR,IAAaA,QAAQ,CAArB,IAA0BA,QAAQ,CAAlC,IAAuCA,QAAQ,EAA/C,IAAqDA,QAAQ,EAArF;;;;AAEA,MAAMI,cAAcJ,QAAQA,QAAQ,CAAR,IAAaA,QAAQ,CAArB,IAA0BA,QAAQ,EAA9D;;;;AAEA,MAAMK,UAAUL,QAAQA,QAAQ,EAAR,IAAcA,QAAQ,EAA9C","sourcesContent":["/**\r\n * L3 node type constant tests\r\n * @module type\r\n */\r\n\r\n/**\r\n * Check if type is of leaf class\r\n * @param  {Number}  type the type constant to test\r\n * @return {Boolean}      result\r\n */\r\nexport const isLeaf = function isLeaf(type) {\r\n\treturn type == 2 || type == 3 || type == 4 || type == 7 || type == 8 || type == 10 || type == 12 || type == 16;\r\n};\r\n\r\n/**\r\n * Check if type is of branch class\r\n * @param  {Number}  type the type constant to test\r\n * @return {Boolean}      result\r\n */\r\nexport const isBranch = function isBranch(type) {\r\n\treturn type == 1 || type == 5 || type == 6 || type == 9 || type == 11 || type == 14 || type == 15;\r\n};\r\n\r\n/**\r\n * Check if type is of close class\r\n * @param  {Number}  type the type constant to test\r\n * @return {Boolean}      result\r\n */\r\nexport const isClose = type => type == 17;\r\n\r\nexport const hasName = type => type == 1 || type == 2 || type == 9 || type == 11 || type == 14;\r\n\r\nexport const hasChildren = type => type == 1 || type == 9 || type == 11;\r\n\r\nexport const hasArgs = type => type == 14 || type == 15;\r\n"],"file":"type.js"}