{"version":3,"sources":["../src/pnode.js"],"names":["__vnode_context","Value","constructor","type","name","value","$type","$name","$value","__is_Value","size","get","set","values","count","valueOf","toString","str","toJS","getType","node","key","vnode","parent","depth","indexInParent","$key","VNode","cx","create","nameOrValue","attrs","rrb","empty","beginMutation","Object","entries","reduce","a","k","v","ohamt","make","val","join","idx","has","next","push","kv","removeChild","child","_type","removeValue","remove","cached","keys","finalize","endMutation","first","last","modify","ref","undefined","insertBefore","reduceList","list","f","z","i","l","dollarRE","_elemToString","e","attrFunc","test","children","c","stringify","prettifier","docAttrFunc"],"mappings":"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","sourcesContent":["import * as ohamt from \"ohamt\";\r\n\r\nimport * as rrb from \"rrb-vector\";\r\n\r\nimport { VNode } from \"./vnode\";\r\n\r\n//import { prettyXML } from \"./pretty\";\r\n\r\nimport { isBranch } from \"./type\";\r\n\r\nimport { serialize } from \"./doctype\";\r\n\r\n// import self!\r\nimport * as cx from \"./pnode\";\r\n\r\n// helpers ---------------\r\nexport const __vnode_context = \"pnode\";\r\n\r\n/**\r\n * immutable value wrapper\r\n * this differs much from inode, because we would infer a type there,\r\n * but here we have a typed value or name/value pair\r\n * @param       {[type]} type  [description]\r\n * @param       {[type]} name  [description]\r\n * @param       {[type]} value [description]\r\n * @constructor\r\n */\r\nclass Value {\r\n\tconstructor(type, name, value) {\r\n\t\tthis.$type = type;\r\n\t\tthis.$name = name;\r\n\t\tthis.$value = value;\r\n\t\tthis.__is_Value = true;\r\n\t\tthis.size = 0;\r\n\t}\r\n\tget(){\r\n\t\treturn this.$value;\r\n\t}\r\n\t// immutable, so type can't change\r\n\tset(value) {\r\n\t\treturn new Value(this.$type,this.$name,value);\r\n\t}\r\n\tvalues() {\r\n\t\t// attr vs typed string vs primitive?\r\n\t\treturn [this.$value];\r\n\t}\r\n\tcount(){\r\n\t\treturn this.size;\r\n\t}\r\n\tvalueOf() {\r\n\t\treturn this.$value;\r\n\t}\r\n\ttoString() {\r\n\t\tvar str = this.$value + \"\";\r\n\t\t//if(this.$type == 3 && json) return \"\\\"\"+str+\"\\\"\";\r\n\t\treturn str;\r\n\t}\r\n\ttoJS() {\r\n\t\treturn this.valueOf();\r\n\t}\r\n}\r\n\r\nexport function getType(node){\r\n\treturn node.$type;\r\n}\r\n\r\n// -----------------------\r\n\r\nexport function set(node, key, value/*, type*/){\r\n\t//type = type || getType(node);\r\n\treturn node.set(key,value);\r\n}\r\n\r\nexport function vnode(node, parent, depth, indexInParent, type){\r\n\ttype = type || getType(node);\r\n\tlet name,\r\n\t\tkey = node.$key,\r\n\t\tvalue;\r\n\tif (type == 1 || type == 9 || type == 11 || type == 14) {\r\n\t\tname = node.get(\"$name\");\r\n\t} else if (type == 2) {\r\n\t\tname = node.$name;\r\n\t\tvalue = node.$value;\r\n\t\t// this ensures pairs are iterated as values (name != key)\r\n\t\tif (node.$key) {\r\n\t\t\tnode = node.$value;\r\n\t\t\ttype = getType(node);\r\n\t\t}\r\n\t} else if (type == 7) {\r\n\t\tvalue = node.$value;\r\n\t} else if (type == 8) {\r\n\t\tvalue = node.$value;\r\n\t} else if (type == 3 || type == 12) {\r\n\t\tvalue = node;\r\n\t} else if (type == 15) {\r\n\t\tname = \"quote\";\r\n\t}\r\n\treturn new VNode(cx, node, type,\r\n\t\tname, key, value, parent, depth, indexInParent);\r\n}\r\n\r\nexport function create(type, nameOrValue, attrs = {}) {\r\n\tif(type == 5) {\r\n\t\tconst node = rrb.empty.beginMutation();\r\n\t\tnode.$type = type;\r\n\t\treturn node;\r\n\t} else if(isBranch(type)) {\r\n\t\tconst node = Object.entries(attrs).reduce((a,[k,v]) => a.set(k,v),ohamt.make().beginMutation());\r\n\t\tnode.$type = type;\r\n\t\tif(type == 6) {\r\n\t\t\treturn node;\r\n\t\t} else if(type == 1 || type == 9 || type == 11) {\r\n\t\t\treturn node.set(\"$name\",nameOrValue).set(\"$children\",rrb.empty.beginMutation());\r\n\t\t} else if(type == 14) {\r\n\t\t\treturn node.set(\"$name\",nameOrValue).set(\"$args\",rrb.empty.beginMutation());\r\n\t\t} else if(type == 15) {\r\n\t\t\treturn node.set(\"$args\",rrb.empty.beginMutation());\r\n\t\t}\r\n\t} else if(type == 2) {\r\n\t\treturn new Value(2,nameOrValue);\r\n\t} else {\r\n\t\tconst val = type == 7 ? nameOrValue.join(\" \") : type == 10 ? serialize(...nameOrValue) : nameOrValue;\r\n\t\treturn new Value(type,null,val);\r\n\t}\r\n}\r\n\r\nexport function get(node, idx){\r\n\treturn node.get(idx);\r\n}\r\n\r\nexport function has(node,idx){\r\n\treturn node.has(idx);\r\n}\r\n\r\nexport function next(node,vnode/*,type*/){\r\n\t//type = type || getType(node);\r\n\tconst next = node.next(vnode.name,vnode.node);\r\n\treturn next;\r\n}\r\n\r\nexport function push(node, kv, type){\r\n\ttype = type || getType(node);\r\n\tif(type == 1 || type == 9 || type == 11){\r\n\t\t// children is a multimap\r\n\t\treturn node.set(\"$children\",node.get(\"$children\").push(kv[1]));\r\n\t} else {\r\n\t\tconst [k,v] = kv;\r\n\t\tif(type == 5) {\r\n\t\t\treturn node.push(v);\r\n\t\t} else if(type == 6){\r\n\t\t\treturn node.set(k,v);\r\n\t\t} else if(type == 14 || type == 15) {\r\n\t\t\tnode.set(\"$args\",node.get(\"$args\").push(v));\r\n\t\t}\r\n\t}\r\n\treturn node;\r\n}\r\n\r\nexport function removeChild(node,child,type){\r\n\ttype = type || node._type;\r\n\tvar key = child.name, val = child.node;\r\n\tif(type == 1 || type == 9 || type == 11){\r\n\t\treturn node.set(\"$children\",node.get(\"$children\").removeValue(key, val));\r\n\t} else if(type == 5 || type == 6){\r\n\t\treturn node.remove(key);\r\n\t}\r\n\treturn node;\r\n}\r\n\r\nexport function cached(){\r\n\t// TODO?\r\n}\r\n\r\nexport function keys(node){\r\n\treturn node.keys();\r\n}\r\n\r\nexport function values(node){\r\n\treturn node.values();\r\n}\r\n\r\nexport function finalize(node){\r\n\treturn node.endMutation();\r\n}\r\n\r\nexport function count(node, type){\r\n\ttype = type || getType(node);\r\n\treturn type == 1 || type == 9 || type == 11 ? node.get(\"$children\").count() : node.count();\r\n}\r\n\r\nexport function first(node,type){\r\n\ttype = type || getType(node);\r\n\tconst first = type == 1 || type == 9 || type == 11 ? node.get(\"$children\").first() : node.first();\r\n\treturn first;\r\n}\r\n\r\nexport function last(node){\r\n\treturn node.last();\r\n}\r\n\r\nexport function entries(node){\r\n\treturn node.entries();\r\n}\r\n\r\nexport function modify(node,vnode,ref,type) {\r\n\ttype = type || getType(node);\r\n\tif(type == 1 || type == 9 || type == 11){\r\n\t\tif(vnode.type == 2) {\r\n\t\t\treturn node.set(vnode.name,vnode.node.$value + \"\");\r\n\t\t} else if (ref !== undefined) {\r\n\t\t\treturn node.set(\"$children\",node.get(\"$children\").insertBefore([ref.name,ref.node],[vnode.name,vnode.node]));\r\n\t\t} else {\r\n\t\t\t// FIXME check the parent type\r\n\t\t\treturn node.set(\"$children\",node.get(\"$children\").push(vnode.node));\r\n\t\t}\r\n\t} else if(type == 2) {\r\n\t\treturn node.set(vnode.node);\r\n\t} else if(type == 5) {\r\n\t\tif (ref !== undefined) {\r\n\t\t\treturn node.insertBefore(ref,vnode.node);\r\n\t\t} else {\r\n\t\t\treturn node.push(vnode.node);\r\n\t\t}\r\n\t} else if(type == 6) {\r\n\t\treturn node.set(vnode.name,vnode.node.$value);\r\n\t}\r\n\treturn node;\r\n}\r\n\r\nconst reduceList = (list, f, z) => {\r\n\tfor(let i = 0, l = list.size; i < l; i++){\r\n\t\tz = f(z,list.get(i),i,list);\r\n\t}\r\n\treturn z;\r\n};\r\n\r\nconst dollarRE = /^\\$/;\r\n\r\nfunction _elemToString(e){\r\n\tconst attrFunc = (z,v,k) => {\r\n\t\tif(dollarRE.test(k)) return z;\r\n\t\treturn z += \" \"+k+\"=\\\"\"+v+\"\\\"\";\r\n\t};\r\n\tconst name = e.get(\"$name\");\r\n\tlet str = \"<\"+name;\r\n\t// TODO QName\r\n\t//let ns = {};\r\n\t//if(ns) str += \" xmlns\" + (ns.prefix ? \":\" + ns.prefix : \"\") + \"=\\\"\" + ns.uri + \"\\\"\";\r\n\tstr = e.reduce(attrFunc,str);\r\n\tconst children = e.get(\"$children\");\r\n\tif(children.size){\r\n\t\tstr += \">\";\r\n\t\tstr = reduceList(children,(a,c) => a + stringify(c),str);\r\n\t\tstr += \"</\"+name+\">\";\r\n\t} else {\r\n\t\tstr += \"/>\";\r\n\t}\r\n\treturn str;\r\n}\r\n\r\nexport function stringify(node,type,prettifier){\r\n\tvar str = \"\";\r\n\ttype = type || getType(node);\r\n\tconst docAttrFunc = (z,v,k) => {\r\n\t\tif(k == \"DOCTYPE\") return z + \"<!\"+k+\" \"+v+\">\";\r\n\t\treturn z;\r\n\t};\r\n\t//const objFunc = (kv) => \"\\\"\"+kv[0]+\"\\\":\"+kv[1].toString(false,true);\r\n\tif(type == 1) {\r\n\t\tstr += _elemToString(node);\r\n\t} else if(type == 2) {\r\n\t\tstr += \"<l3:a name=\\\"\" + node.$name + \"\\\">\" + stringify(node.$value) + \"</l3:a>\";\r\n\t} else if(type == 5) {\r\n\t\tconst val = reduceList(node,(a,c) => a + stringify(c),\"\");\r\n\t\tstr += \"<l3:l\" + (val ? \">\" + val + \"</l3:l>\" : \"/>\");\r\n\t} else  if(type == 6){\r\n\t\tconst val = node.reduce((a,v,k) => {\r\n\t\t\treturn a + stringify(new Value(2,k,v));\r\n\t\t},\"\");\r\n\t\tstr += \"<l3:m\" + (val ? \">\" + val + \"</l3:m>\" : \"/>\");\r\n\t} else if(type == 14 || type == 15) {\r\n\t\tconst val = reduceList(node.get(\"$args\"),(a,c) => a + stringify(c),\"\");\r\n\t\tif(type == 14) {\r\n\t\t\tstr += \"<l3:f name=\\\"\" + node.get(\"$name\") + \"\\\"\" + (val ? \">\" + val + \"</l3:f>\" : \"/>\");\r\n\t\t} else {\r\n\t\t\tstr += \"<l3:q\" + (val ? \">\" + val + \"</l3:q>\" : \"/>\");\r\n\t\t}\r\n\t} else if(type == 9 || type == 11){\r\n\t\tstr = node.reduce(docAttrFunc,str);\r\n\t\tstr = reduceList(node.get(\"$children\"),(a,c) => a + stringify(c),str);\r\n\t} else {\r\n\t\tstr = node.toString();\r\n\t}\r\n\treturn prettifier ? prettifier(str) : str;\r\n}\r\n\r\n\r\nexport function toJS(node){\r\n\treturn node.toJS();\r\n}\r\n"],"file":"pnode.js"}