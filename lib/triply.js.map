{"version":3,"sources":["../src/triply.js"],"names":["reservedNameKey","reservedValueKeys","__vnode_context","getType","node","$type","vnode","parent","depth","indexInParent","type","name","key","value","$key","$value","VNode","cx","create","nameOrValue","t","val","join","_itemAt","iter","idx","i","x","get","_children","has","_nextOrPrev","dir","entries","Object","kv","next","nextSibling","previous","push","k","v","appendChild","set","removeChild","child","first","firstChild","map","fn","reduce","z","cached","children","Array","from","len","length","cache","keys","filter","dollarRE","test","values","finalize","count","last","lastChild","lastItem","modify","ref","stringify","undefined","insertBefore","toJS","acc","valueOf","_elemToString","e","attrFunc","str","cc","s","c","prettifier","a"],"mappings":"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","sourcesContent":["import t from \"triply\";\r\n\r\nimport { VNode } from \"./vnode\";\r\n\r\nimport multimap from \"./multimap\";\r\n\r\nimport { serialize } from \"./doctype\";\r\n\r\nimport { isBranch } from \"./type\";\r\n\r\nimport { append } from \"./array-util\";\r\n\r\n// import self!\r\nimport * as cx from \"./triply\";\r\n\r\n// helpers ---------------\r\n\r\n//import { q } from \"./qname\";\r\n\r\nconst reservedNameKey = \"$name\"; //[1,2,9,11,14]\r\n//const reservedChildrenKey = \"$children\"; //[1,9,11]\r\n//const reservedArgsKey = \"$args\"; //[14,15]\r\nconst reservedValueKeys = {\r\n\t2:\"$value\",\r\n\t4:\"$ref\",\r\n\t7:\"$pi\",\r\n\t8:\"$comment\",\r\n\t10:\"$doctype\"\r\n};\r\n\r\nexport const __vnode_context = \"triply\";\r\n\r\nexport function getType(node) {\r\n\treturn node.$type;\r\n}\r\n\r\n// -----------------------\r\n\r\nexport function vnode(node, parent, depth, indexInParent, type) {\r\n\ttype = type || getType(node);\r\n\tlet name,key,value;\r\n\tif (isBranch(type)) {\r\n\t\tname = node[reservedNameKey];\r\n\t} else if (type == 2) {\r\n\t\tname = node[reservedNameKey];\r\n\t\tvalue = node[reservedValueKeys[2]];\r\n\t\t// this ensures pairs are iterated as their values (if no $key use attr node for construction)\r\n\t\tif (node.$key) {\r\n\t\t\tkey = node.$key;\r\n\t\t\tnode = value;\r\n\t\t\ttype = getType(node);\r\n\t\t}\r\n\t} else if(type == 3 || type == 12) {\r\n\t\tvalue = node.$value;\r\n\t} else {\r\n\t\tvalue = node[reservedValueKeys[type]];\r\n\t}\r\n\treturn new VNode(cx, node, type, name, key, value, parent, depth, indexInParent);\r\n}\r\n\r\nexport function create(type, nameOrValue) {\r\n\tconst node = t.create({$type:type});\r\n\tif(type == 3 || type == 12) {\r\n\t\tnode.$value = nameOrValue;\r\n\t} else if (type == 1 || type == 9 || type == 11 || type == 14) {\r\n\t\tnode[reservedNameKey] = nameOrValue;\r\n\t} else if(type == 2) {\r\n\t\t// value will be inserted later\r\n\t\tnode[reservedNameKey] = nameOrValue;\r\n\t\tnode[reservedValueKeys[2]] = void 0;\r\n\t} else {\r\n\t\tconst val = type == 7 ? nameOrValue.join(\" \") : type == 10 ? serialize(...nameOrValue) : nameOrValue;\r\n\t\tnode[reservedValueKeys[type]] = val;\r\n\t}\r\n\treturn node;\r\n}\r\n\r\nfunction _itemAt(iter,idx) {\r\n\tlet i = 0;\r\n\tfor(let x of iter) {\r\n\t\tif(i === idx) return x;\r\n\t\ti++;\r\n\t}\r\n}\r\n\r\nexport function get(node,idx,type){\r\n\ttype = type || getType(node);\r\n\tif(type == 6) {\r\n\t\treturn node[idx];\r\n\t}\r\n\treturn _itemAt(_children(node),idx);\r\n}\r\n\r\nexport function has(node,idx,type) {\r\n\ttype = type || getType(node);\r\n\tif(type == 6) {\r\n\t\treturn idx in node;\r\n\t}\r\n\treturn !!_itemAt(_children(node),idx);\r\n}\r\n\r\nvar _nextOrPrev = function _nextOrPrev(node, idx, dir) {\r\n\tvar entries = Object.entries(node);\r\n\tvar kv = entries[idx + dir];\r\n\t// pass pair-wise\r\n\treturn { $key: kv[0], $value: kv[1] };\r\n};\r\n\r\nexport function next(node, vnode, type) {\r\n\ttype == type || getType(node);\r\n\treturn type == 6 ? _nextOrPrev(node, vnode.indexInParent - 1, 1) : t.nextSibling(node);\r\n}\r\n\r\nexport function previous(node, vnode, type) {\r\n\ttype == type || getType(node);\r\n\treturn type == 6 ? _nextOrPrev(node, vnode.indexInParent - 1, -1) : t.nextSibling(node);\r\n}\r\n\r\nexport function push(node, [k,v], type) {\r\n\ttype = type || getType(node);\r\n\tif (type == 6) {\r\n\t\tnode[k] = v;\r\n\t} else if(isBranch(type)) {\r\n\t\tt.appendChild(node,v);\r\n\t}\r\n\treturn node;\r\n}\r\n\r\nexport function set(node,key,val,type) {\r\n\ttype = type || getType(node);\r\n\tif(type == 1 || type == 6) {\r\n\t\tnode[key] = val;\r\n\t\treturn node;\r\n\t}\r\n\treturn node;\r\n}\r\n\r\nexport function removeChild(node, child, type) {\r\n\ttype = type || getType(node);\r\n\tif (type == 1 || type == 9 || type == 11) {\r\n\t\t//node[reservedChildrenKey].splice(child.indexInParent, 1);\r\n\t\tt.removeChild(node,child);\r\n\t} else if (type == 5) {\r\n\t\tt.removeChild(node,child);\r\n\t} else if (type == 6) {\r\n\t\tdelete node[child.key];\r\n\t} else if (type == 14 || type == 15) {\r\n\t\tt.removeChild(node,child);\r\n\t}\r\n\treturn node;\r\n}\r\n\r\nfunction* _children(node) {\r\n\tlet first = t.firstChild(node);\r\n\twhile(first) {\r\n\t\tyield first;\r\n\t\tfirst = t.nextSibling(first);\r\n\t}\r\n}\r\n\r\nfunction map(iter,fn) {\r\n\treturn reduce(iter,(z,x,i) => append(z,fn(x,i)),[]);\r\n}\r\n\r\nfunction reduce(iter,fn,z) {\r\n\tlet i = 0;\r\n\tfor(let x of iter) {\r\n\t\tz = fn(z,x,i++);\r\n\t}\r\n\treturn z;\r\n}\r\n\r\nexport function cached(node, type) {\r\n\ttype = type || getType(node);\r\n\tif (type == 1 || type == 9 || type == 11) {\r\n\t\tlet children = Array.from(_children(node)),\r\n\t\t\tlen = children.length,\r\n\t\t\tcache = multimap();\r\n\t\tfor (var i = 0; i < len; i++) {\r\n\t\t\tcache.push([children[i][reservedNameKey] || i + 1, children[i]]);\r\n\t\t}\r\n\t\treturn cache;\r\n\t}\r\n\tif (type == 5) {\r\n\t\treturn {\r\n\t\t\tkeys: function keys() {\r\n\t\t\t\treturn node.keys();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\tif (type == 6) {\r\n\t\treturn {\r\n\t\t\tkeys: function keys() {\r\n\t\t\t\treturn Object.keys(node);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport function keys(node, type) {\r\n\ttype = type || getType(node);\r\n\tif (type == 1 || type == 5 || type == 9 || type == 11 || type == 14 || type == 15) {\r\n\t\treturn map(_children(node),(x,i) => x[reservedNameKey] || i);\r\n\t}\r\n\tif (type == 6) return Object.keys(node).filter(x => !dollarRE.test(x));\r\n\treturn [];\r\n}\r\n\r\nexport function values(node, type) {\r\n\ttype = type || getType(node);\r\n\tif (type == 1 || type == 5 || type == 9 || type == 11 || type == 14 || type == 15) return _children(node);\r\n\tif (type == 2) return [[node[reservedNameKey], node[reservedValueKeys[2]]]];\r\n\tif (type == 6)\r\n\t\t// pair-wise\r\n\t\treturn Object.entries(node).map(function (kv) {\r\n\t\t\treturn { $key: kv[0], $value: kv[1] };\r\n\t\t});\r\n\tif(type == 3 || type == 12) return [node.$value];\r\n\treturn [node[reservedValueKeys[type]]];\r\n}\r\n\r\nexport function finalize(node) {\r\n\treturn node;\r\n}\r\n\r\nexport function count(node, type) {\r\n\ttype = type || getType(node);\r\n\tif (type == 1 || type == 5 || type == 9 || type == 11 || type == 14 || type == 15) {\r\n\t\treturn Array.from(_children(node)).length;\r\n\t} else if (type == 6) {\r\n\t\treturn keys(node).length;\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\nexport function first(node, type) {\r\n\ttype = type || getType(node);\r\n\tif (type == 1 || type == 5 || type == 9 || type == 11 || type == 14 || type == 15) {\r\n\t\treturn t.firstChild(node);\r\n\t} else if (type == 6) {\r\n\t\tvar entries = Object.entries(node);\r\n\t\tvar kv = entries[0];\r\n\t\t// pass pair-wise\r\n\t\treturn { $key: kv[0], $value: kv[1] };\r\n\t}\r\n}\r\n\r\nexport function last(node, type) {\r\n\ttype = type || getType(node);\r\n\tif (type == 1 || type == 5 || type == 9 || type == 11 || type == 14 || type == 15) return t.lastChild(node);\r\n\tif (type == 6) {\r\n\t\tvar entries = Object.entries(node);\r\n\t\tvar kv = entries.lastItem;\r\n\t\t// pass pair-wise\r\n\t\treturn { $key: kv[0], $value: kv[1] };\r\n\t}\r\n}\r\n\r\nconst dollarRE = /^\\$/;\r\n\r\nexport function entries(node, type) {\r\n\ttype = type || getType(node);\r\n\tif(type == 5) return Array.from(_children(node)).entries();\r\n\tif (type == 1 || type == 6 || type == 9 || type == 11) return Object.entries(node).filter(([k]) => !dollarRE.test(k));\r\n\treturn [];\r\n}\r\n\r\nexport function modify(node, vnode, ref, type) {\r\n\ttype = type || getType(node);\r\n\tif (type == 1 || type == 5 || type == 9 || type == 11 || type == 14 || type == 15) {\r\n\t\tif (vnode.type == 2) {\r\n\t\t\t// TODO conversion rules!\r\n\t\t\tnode[vnode.name] = stringify(vnode.node.$value);\r\n\t\t} else if (ref !== undefined) {\r\n\t\t\tt.insertBefore(vnode.node,node);\r\n\t\t} else {\r\n\t\t\tt.appendChild(vnode.node,node);\r\n\t\t}\r\n\t} else if (type == 2) {\r\n\t\tnode[reservedValueKeys[2]] = vnode.node;\r\n\t} else if (type == 6) {\r\n\t\tnode[vnode.name] = vnode.node[reservedValueKeys[2]];\r\n\t}\r\n\treturn node;\r\n}\r\n\r\nexport function toJS(node,type) {\r\n\ttype = type || getType(node);\r\n\tif(type == 5) {\r\n\t\treturn node.map(x => toJS(x));\r\n\t} else if(type == 6) {\r\n\t\treturn Object.entries(node).reduce((acc,[k,v]) => {\r\n\t\t\tacc[k] = toJS(v);\r\n\t\t\treturn acc;\r\n\t\t},{});\r\n\t} else {\r\n\t\treturn node.valueOf();\r\n\t}\r\n}\r\n\r\n\r\nfunction _elemToString(e) {\r\n\tconst attrFunc = (z, [k,v]) => {\r\n\t\tif(dollarRE.test(k)) return z;\r\n\t\treturn z + (\" \" + k + \"=\\\"\" + v + \"\\\"\");\r\n\t};\r\n\tconst name = e[reservedNameKey];\r\n\tvar str = \"<\" + name;\r\n\tstr = Object.entries(e).reduce(attrFunc, str);\r\n\tconst cc = reduce(_children(e),(s,c) => s + stringify(c),\"\");\r\n\tif (cc) {\r\n\t\tstr += \">\"+cc;\r\n\t\tstr += \"</\" + name + \">\";\r\n\t} else {\r\n\t\tstr += \"/>\";\r\n\t}\r\n\treturn str;\r\n}\r\n\r\n// FIXME XML or HTML?\r\n// TODO ref type\r\nexport function stringify(node, type, prettifier) {\r\n\tvar str = \"\";\r\n\ttype = type || getType(node);\r\n\tif (type == 1) {\r\n\t\tstr += _elemToString(node);\r\n\t} else if(type == 9 || type == 11) {\r\n\t\tstr = map(_children(node),c => stringify(c)).join(\"\");\r\n\t} else if (type == 2) {\r\n\t\tstr += \"<l3:a name=\\\"\" + node.$key + \"\\\">\" + stringify(node.$value) + \"</l3:a>\";\r\n\t} else if (type == 5) {\r\n\t\tconst val = map(_children(node),c => stringify(c)).join(\"\");\r\n\t\tstr += \"<l3:l\" + (val ? \">\" + val + \"</l3:l>\" : \"/>\");\r\n\t} else if (type == 6) {\r\n\t\tconst val = entries(node).reduce(function (a,c) {\r\n\t\t\treturn a + stringify({ $key: c[0], $value: stringify(c[1]) });\r\n\t\t},\"\");\r\n\t\tstr += \"<l3:m\" + (val ? \">\" + val + \"</l3:m>\" : \"/>\");\r\n\t} else if (type == 14 || type == 15) {\r\n\t\tconst val = reduce(_children(node),(a,c) => a + stringify(c),\"\");\r\n\t\tif(type == 14) {\r\n\t\t\tstr += \"<l3:f name=\\\"\" + node[reservedNameKey] + \"\\\"\" + (val ? \">\" + val + \"</l3:f>\" : \"/>\");\r\n\t\t} else {\r\n\t\t\tstr += \"<l3:q\" + (val ? \">\" + val + \"</l3:q>\" : \"/>\");\r\n\t\t}\r\n\t} else {\r\n\t\tif (type == 7) {\r\n\t\t\tstr += \"<?\" + node[reservedValueKeys[7]] + \"?>\";\r\n\t\t} else if (type == 8) {\r\n\t\t\tstr += \"<!--\" + node[reservedValueKeys[8]] + \"-->\";\r\n\t\t} else if (type == 10) {\r\n\t\t\tstr += \"<!DOCTYPE \"+node[reservedValueKeys[10]]+\">\";\r\n\t\t} else {\r\n\t\t\tconst val = node.$value === null ? \"null\" : node.$value;\r\n\t\t\tstr += type == 12 ? \"<l3:x>\" + val + \"</l3:x>\" : val;\r\n\t\t}\r\n\t}\r\n\treturn prettifier ? prettifier(str) : str;\r\n}\r\n"],"file":"triply.js"}