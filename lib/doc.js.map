{"version":3,"sources":["../src/doc.js"],"names":["ensureDoc","$node","cx","inode","pipe","node","type","getType","root","first","vnode","doc","t","bind","_root","push","next","depth","d","children","doctype","name","publicId","systemId"],"mappings":";;;;;;;;;;AAKA;;AAEA;;AAEA;;AAEA;;AAEA;;;;;;AAbA;;;;;AAeA;;;;;AAKO,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;AAChC;AACA,MAAIC,KAAK,uBAAW,IAAX,EAAgBC,KAAhB,CAAT;AACA,SAAO,mBAAKF,KAAL,EAAYG,IAAZ,CAAiB,0BAAU,UAAUC,IAAV,EAAgB;AACjD,QAAI,CAAC,oBAAQA,IAAR,CAAL,EAAoB;AACnB,UAAIC,OAAOJ,GAAGK,OAAH,CAAWF,IAAX,CAAX;;AACA,UAAIC,QAAQ,CAAR,IAAaA,QAAQ,EAAzB,EAA6B;AAC5B,YAAIE,OAAON,GAAGO,KAAH,CAASJ,IAAT,CAAX;AACA,eAAO,mBAAKH,GAAGQ,KAAH,CAASF,IAAT,EAAeN,GAAGQ,KAAH,CAASL,IAAT,CAAf,EAA+B,CAA/B,EAAkC,CAAlC,CAAL,CAAP;AACA,OAHD,MAGO;AACN;AACA,YAAIM,MAAMC,EAAEC,IAAF,CAAOX,EAAP,GAAV;;AACA,YAAIY,QAAQZ,GAAGQ,KAAH,CAASL,IAAT,EAAeM,GAAf,EAAoB,CAApB,EAAuB,CAAvB,CAAZ;;AACA,eAAO,mBAAKA,GAAL,EAAUP,IAAV,CAAe,0BAAU,UAAUO,GAAV,EAAe;AAC9CA,gBAAMA,IAAII,IAAJ,CAAS,CAAC,CAAD,EAAID,MAAMT,IAAV,CAAT,CAAN;AACA,cAAIW,OAAOL,IAAIF,KAAJ,EAAX;AACA,iBAAOO,OAAO,mBAAKL,IAAID,KAAJ,CAAUM,IAAV,EAAgBL,GAAhB,EAAqBA,IAAIM,KAAJ,GAAY,CAAjC,EAAoC,CAApC,CAAL,CAAP,GAAsD,oBAA7D;AACA,SAJqB,CAAf,CAAP;AAKA;AACD;;AACD,QAAI,OAAOZ,KAAKA,IAAZ,KAAqB,UAAzB,EAAqC;AACpC;AACA,aAAO,mBAAKO,EAAEC,IAAF,CAAOX,EAAP,EAAWG,IAAX,CAAL,EAAuBD,IAAvB,CAA4B,0BAAU,UAAUC,IAAV,EAAgB;AAC5D,YAAIW,OAAOX,KAAKI,KAAL,EAAX;AACA,eAAOO,OAAO,mBAAKX,KAAKK,KAAL,CAAWM,IAAX,EAAiBX,IAAjB,EAAuBA,KAAKY,KAAL,GAAa,CAApC,EAAuC,CAAvC,CAAL,CAAP,GAAyD,oBAAhE;AACA,OAHkC,CAA5B,CAAP;AAIA;;AACD,WAAO,mBAAKZ,IAAL,CAAP;AACA,GAzBuB,CAAjB,CAAP;AA0BA;AAED;;;;;;;;AAMO,SAASa,CAAT,CAAW,GAAGC,QAAd,EAAwB;AAC9B,SAAO,6BAAG,CAAH,EAAM,WAAN,EAAmBA,QAAnB,EAA6Bd,IAA7B,CAAkC,uBAAW,IAAX,EAAgBF,KAAhB,CAAlC,CAAP;AACA;AAED;;;;;;;;AAMO,SAASS,CAAT,CAAW,GAAGO,QAAd,EAAwB;AAC9B,SAAO,6BAAG,EAAH,EAAO,oBAAP,EAA4BA,QAA5B,EAAsCd,IAAtC,CAA2C,uBAAW,IAAX,EAAgBF,KAAhB,CAA3C,CAAP;AACA;AAED;;;;;;;;;AAOO,SAASiB,OAAT,CAAiBC,IAAjB,EAAsBC,WAAS,EAA/B,EAAkCC,WAAS,EAA3C,EAA8C;AACpD,SAAO,6BAAG,EAAH,EAAM,CAACF,IAAD,EAAMC,QAAN,EAAeC,QAAf,CAAN,CAAP;AACA","sourcesContent":["/**\n * Document-related functions\n * @module doc\n */\n\nimport { concatMap } from \"rxjs/operators\";\n\nimport { getContext, isVNode } from \"./vnode\";\n\nimport { _n, _v } from \"./construct-impl-strict\";\n\nimport just from \"./just\";\n\nimport * as inode from \"./inode\";\n\n/**\n * Wraps a document into a document-fragment if it doesn't have a document root\n * @param  {any} $node  Observable, VNode or any kind of node mathing the provided document implementation context\n * @return {Observable} Observable yielding a single VNode\n */\nexport function ensureDoc($node) {\n\t// FIXME if isVNode(node) use cx on node\n\tvar cx = getContext(this,inode);\n\treturn just($node).pipe(concatMap(function (node) {\n\t\tif (!isVNode(node)) {\n\t\t\tvar type = cx.getType(node);\n\t\t\tif (type == 9 || type == 11) {\n\t\t\t\tvar root = cx.first(node);\n\t\t\t\treturn just(cx.vnode(root, cx.vnode(node), 1, 0));\n\t\t\t} else {\n\t\t\t\t// create a document-fragment by default!\n\t\t\t\tvar doc = t.bind(cx)();\n\t\t\t\tvar _root = cx.vnode(node, doc, 1, 0);\n\t\t\t\treturn just(doc).pipe(concatMap(function (doc) {\n\t\t\t\t\tdoc = doc.push([0, _root.node]);\n\t\t\t\t\tvar next = doc.first();\n\t\t\t\t\treturn next ? just(doc.vnode(next, doc, doc.depth + 1, 0)) : just();\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t\tif (typeof node.node === \"function\") {\n\t\t\t// NOTE never bind to current node.cx, but purposely allow cross-binding\n\t\t\treturn just(t.bind(cx)(node)).pipe(concatMap(function (node) {\n\t\t\t\tvar next = node.first();\n\t\t\t\treturn next ? just(node.vnode(next, node, node.depth + 1, 0)) : just();\n\t\t\t}));\n\t\t}\n\t\treturn just(node);\n\t}));\n}\n\n/**\n * Creates a document node, which can contain a nodes of any other type.\n * This is a top level node, and may not be contained in other nodes.\n * @param  {VNode} children The children of the document\n * @return {VNode}          A VNode containing a document\n */\nexport function d(...children) {\n\treturn _n(9, \"#document\", children).node(getContext(this,inode));\n}\n\n/**\n * Creates a document-fragment node, which can contain nodes of any other type.\n * This is a top level node, and may not be contained in other nodes.\n * @param  {VNode} children The children of the document-fragment\n * @return {VNode}          A VNode containing a document-fragment\n */\nexport function t(...children) {\n\treturn _n(11, \"#document-fragment\",children).node(getContext(this,inode));\n}\n\n/**\n * Creates a document type node.\n * @param  {String} name          The qualified name\n * @param  {String} publicId=\"\"   The PUBLIC identifier\n * @param  {String} systemId=\"\"   The SYSTEM identifier\n * @return {VNode}               A faux VNode\n */\nexport function doctype(name,publicId=\"\",systemId=\"\"){\n\treturn _v(10,[name,publicId,systemId]);\n}\n"],"file":"doc.js"}