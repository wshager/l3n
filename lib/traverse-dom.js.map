{"version":3,"sources":["../src/traverse-dom.js"],"names":["traverseDOM","cx","$node","d","document","ensureDoc","bind","Observable","create","$o","subscribe","next","vnode","t","createTreeWalker","node","closers","WeakMap","isBranch","n","nodeType","emitNode","VNode","nodeName","textContent","parentNode","close","Close","has","parent","get","delete","currentNode","nextNode","lastChild","childNodes","length","set","complete","error","err"],"mappings":";;;;;QAQgBA,W,GAAAA,W;;AARhB;;AAEA;;AAEA;;AAEA;;IAAYC,E;;;;AAEL,SAASD,WAAT,CAAqBE,KAArB,EAA2BC,IAAIC,QAA/B,EAAwC;AAC9CF,SAAQG,eAAUC,IAAV,CAAeL,EAAf,EAAmBC,KAAnB,CAAR;AACA,QAAOK,iBAAWC,MAAX,CAAkBC,MAAM;AAC9BP,QAAMQ,SAAN,CAAgB;AACfC,QAAKC,KAAL,EAAW;AACV,UAAMC,IAAIV,EAAEW,gBAAF,CAAmBF,MAAMG,IAAzB,CAAV;AACA,UAAMC,UAAU,IAAIC,OAAJ,EAAhB;AACA,UAAMC,WAAWC,KAAKA,EAAEC,QAAF,IAAc,CAAd,IAAmBD,EAAEC,QAAF,IAAc,CAAjC,IAAsCD,EAAEC,QAAF,IAAc,EAApD,IAA0DD,EAAEC,QAAF,IAAc,EAA9F;AACA,UAAMC,WAAWF,KAAK;AACrBV,QAAGE,IAAH,CAAQ,IAAIW,YAAJ,CAAUrB,EAAV,EAAakB,CAAb,EAAeA,EAAEC,QAAjB,EAA2BD,EAAEI,QAA7B,EAAuCJ,EAAEC,QAAF,IAAc,CAAd,GAAkBD,EAAEI,QAApB,GAA+B,IAAtE,EAA4EJ,EAAEK,WAA9E,EAA2FL,EAAEM,UAA7F,CAAR;AACA,KAFD;AAGA,UAAMC,QAAQP,KAAK;AAClBV,QAAGE,IAAH,CAAQ,IAAIgB,YAAJ,CAAUR,CAAV,CAAR;AACA,SAAGH,QAAQY,GAAR,CAAYT,CAAZ,CAAH,EAAmB;AAClB,YAAMU,SAASb,QAAQc,GAAR,CAAYX,CAAZ,CAAf;AACAH,cAAQe,MAAR,CAAeZ,CAAf;AACAO,YAAMG,MAAN;AACA;AACD,KAPD;AAQAR,aAASR,EAAEmB,WAAX;AACA,WAAMnB,EAAEoB,QAAF,EAAN,EAAoB;AACnB,WAAMd,IAAIN,EAAEmB,WAAZ;AACAX,cAASF,CAAT;AACA;AACA;AACA;AACA;AACA,SAAIU,SAASV,EAAEM,UAAf;AACA,SAAGI,UAAUA,OAAOK,SAAP,IAAoBf,CAAjC,EAAoC;AACnC,UAAGD,SAASC,CAAT,CAAH,EAAgB;AACf,WAAG,CAACA,EAAEgB,UAAF,CAAaC,MAAjB,EAAyB;AACxBV,cAAMP,CAAN;AACAO,cAAMG,MAAN;AACA,QAHD,MAGO;AACNb,gBAAQqB,GAAR,CAAYlB,CAAZ,EAAcU,MAAd;AACA;AACD,OAPD,MAOO;AACNH,aAAMG,MAAN;AACA;AACD;AACD;AACD,IAtCc;AAuCfS,cAAU;AACT7B,OAAG6B,QAAH;AACA,IAzCc;AA0CfC,SAAMC,GAAN,EAAW;AACV/B,OAAG8B,KAAH,CAASC,GAAT;AACA;AA5Cc,GAAhB;AA8CA,EA/CM,CAAP;AAgDA;;kBAEcxC,W","file":"traverse-dom.js","sourcesContent":["import { Observable } from \"rxjs\";\r\n\r\nimport { VNode, Close } from \"./vnode\";\r\n\r\nimport { ensureDoc } from \"./doc\";\r\n\r\nimport * as cx from \"./dom\";\r\n\r\nexport function traverseDOM($node,d = document){\r\n\t$node = ensureDoc.bind(cx)($node);\r\n\treturn Observable.create($o => {\r\n\t\t$node.subscribe({\r\n\t\t\tnext(vnode){\r\n\t\t\t\tconst t = d.createTreeWalker(vnode.node);\r\n\t\t\t\tconst closers = new WeakMap();\r\n\t\t\t\tconst isBranch = n => n.nodeType == 1 || n.nodeType == 9 || n.nodeType == 10 || n.nodeType == 11;\r\n\t\t\t\tconst emitNode = n => {\r\n\t\t\t\t\t$o.next(new VNode(cx,n,n.nodeType, n.nodeName, n.nodeType == 2 ? n.nodeName : null, n.textContent, n.parentNode));\r\n\t\t\t\t};\r\n\t\t\t\tconst close = n => {\r\n\t\t\t\t\t$o.next(new Close(n));\r\n\t\t\t\t\tif(closers.has(n)) {\r\n\t\t\t\t\t\tconst parent = closers.get(n);\r\n\t\t\t\t\t\tclosers.delete(n);\r\n\t\t\t\t\t\tclose(parent);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\temitNode(t.currentNode);\r\n\t\t\t\twhile(t.nextNode()) {\r\n\t\t\t\t\tconst n = t.currentNode;\r\n\t\t\t\t\temitNode(n);\r\n\t\t\t\t\t// if the node is a leaf or an empty branch, close its parent\r\n\t\t\t\t\t// else the node itself should close first\r\n\t\t\t\t\t// so don't close the parent yet, but move it to the closers map\r\n\t\t\t\t\t// and close it after this node closes\r\n\t\t\t\t\tlet parent = n.parentNode;\r\n\t\t\t\t\tif(parent && parent.lastChild == n) {\r\n\t\t\t\t\t\tif(isBranch(n)) {\r\n\t\t\t\t\t\t\tif(!n.childNodes.length) {\r\n\t\t\t\t\t\t\t\tclose(n);\r\n\t\t\t\t\t\t\t\tclose(parent);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tclosers.set(n,parent);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tclose(parent);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcomplete(){\r\n\t\t\t\t$o.complete();\r\n\t\t\t},\r\n\t\t\terror(err) {\r\n\t\t\t\t$o.error(err);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport default traverseDOM;\r\n"]}