{"version":3,"sources":["../src/traverse-dom.js"],"names":["traverseDOM","$node","d","document","ensureDoc","bind","cx","Observable","create","$o","subscribe","next","vnode","t","createTreeWalker","node","closers","WeakMap","isBranch","n","nodeType","emitNode","VNode","nodeName","textContent","parentNode","close","Close","has","parent","get","delete","currentNode","nextNode","lastChild","childNodes","length","set","complete","error","err"],"mappings":";;;;;;;;AAKA;;AAEA;;AAEA;;AAEA;;;;AAXA;;;;;AAaA;;;;;AAKO,SAASA,WAAT,CAAqBC,KAArB,EAA2BC,IAAIC,QAA/B,EAAwC;AAC9CF,UAAQG,eAAUC,IAAV,CAAeC,EAAf,EAAmBL,KAAnB,CAAR;AACA,SAAOM,iBAAWC,MAAX,CAAkBC,MAAM;AAC9BR,UAAMS,SAAN,CAAgB;AACfC,WAAKC,KAAL,EAAW;AACV,cAAMC,IAAIX,EAAEY,gBAAF,CAAmBF,MAAMG,IAAzB,CAAV;AACA,cAAMC,UAAU,IAAIC,OAAJ,EAAhB;;AACA,cAAMC,WAAWC,KAAKA,EAAEC,QAAF,IAAc,CAAd,IAAmBD,EAAEC,QAAF,IAAc,CAAjC,IAAsCD,EAAEC,QAAF,IAAc,EAApD,IAA0DD,EAAEC,QAAF,IAAc,EAA9F;;AACA,cAAMC,WAAWF,KAAK;AACrBV,aAAGE,IAAH,CAAQ,IAAIW,YAAJ,CAAUhB,EAAV,EAAaa,CAAb,EAAeA,EAAEC,QAAjB,EAA2BD,EAAEI,QAA7B,EAAuCJ,EAAEC,QAAF,IAAc,CAAd,GAAkBD,EAAEI,QAApB,GAA+B,IAAtE,EAA4EJ,EAAEK,WAA9E,EAA2FL,EAAEM,UAA7F,CAAR;AACA,SAFD;;AAGA,cAAMC,QAAQP,KAAK;AAClBV,aAAGE,IAAH,CAAQ,IAAIgB,YAAJ,CAAUR,CAAV,CAAR;;AACA,cAAGH,QAAQY,GAAR,CAAYT,CAAZ,CAAH,EAAmB;AAClB,kBAAMU,SAASb,QAAQc,GAAR,CAAYX,CAAZ,CAAf;AACAH,oBAAQe,MAAR,CAAeZ,CAAf;AACAO,kBAAMG,MAAN;AACA;AACD,SAPD;;AAQAR,iBAASR,EAAEmB,WAAX;;AACA,eAAMnB,EAAEoB,QAAF,EAAN,EAAoB;AACnB,gBAAMd,IAAIN,EAAEmB,WAAZ;AACAX,mBAASF,CAAT,EAFmB,CAGnB;AACA;AACA;AACA;;AACA,cAAIU,SAASV,EAAEM,UAAf;;AACA,cAAGI,UAAUA,OAAOK,SAAP,IAAoBf,CAAjC,EAAoC;AACnC,gBAAGD,SAASC,CAAT,CAAH,EAAgB;AACf,kBAAG,CAACA,EAAEgB,UAAF,CAAaC,MAAjB,EAAyB;AACxBV,sBAAMP,CAAN;AACAO,sBAAMG,MAAN;AACA,eAHD,MAGO;AACNb,wBAAQqB,GAAR,CAAYlB,CAAZ,EAAcU,MAAd;AACA;AACD,aAPD,MAOO;AACNH,oBAAMG,MAAN;AACA;AACD;AACD;AACD,OAtCc;;AAuCfS,iBAAU;AACT7B,WAAG6B,QAAH;AACA,OAzCc;;AA0CfC,YAAMC,GAAN,EAAW;AACV/B,WAAG8B,KAAH,CAASC,GAAT;AACA;;AA5Cc,KAAhB;AA8CA,GA/CM,CAAP;AAgDA;;eAEcxC,W","sourcesContent":["/**\r\n * DOM Traversal\r\n * @module traverse-dom\r\n */\r\n\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { VNode, Close } from \"./vnode\";\r\n\r\nimport { ensureDoc } from \"./doc\";\r\n\r\nimport * as cx from \"./dom\";\r\n\r\n/**\r\n * Traverses a document in depth-first (AKA \"document\") order\r\n * @param  {any} $node  VNode, Observable or any node constructed within the DOM context\r\n * @return {Observable} An Observable stream emitting VNodes\r\n */\r\nexport function traverseDOM($node,d = document){\r\n\t$node = ensureDoc.bind(cx)($node);\r\n\treturn Observable.create($o => {\r\n\t\t$node.subscribe({\r\n\t\t\tnext(vnode){\r\n\t\t\t\tconst t = d.createTreeWalker(vnode.node);\r\n\t\t\t\tconst closers = new WeakMap();\r\n\t\t\t\tconst isBranch = n => n.nodeType == 1 || n.nodeType == 9 || n.nodeType == 10 || n.nodeType == 11;\r\n\t\t\t\tconst emitNode = n => {\r\n\t\t\t\t\t$o.next(new VNode(cx,n,n.nodeType, n.nodeName, n.nodeType == 2 ? n.nodeName : null, n.textContent, n.parentNode));\r\n\t\t\t\t};\r\n\t\t\t\tconst close = n => {\r\n\t\t\t\t\t$o.next(new Close(n));\r\n\t\t\t\t\tif(closers.has(n)) {\r\n\t\t\t\t\t\tconst parent = closers.get(n);\r\n\t\t\t\t\t\tclosers.delete(n);\r\n\t\t\t\t\t\tclose(parent);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\temitNode(t.currentNode);\r\n\t\t\t\twhile(t.nextNode()) {\r\n\t\t\t\t\tconst n = t.currentNode;\r\n\t\t\t\t\temitNode(n);\r\n\t\t\t\t\t// if the node is a leaf or an empty branch, close its parent\r\n\t\t\t\t\t// else the node itself should close first\r\n\t\t\t\t\t// so don't close the parent yet, but move it to the closers map\r\n\t\t\t\t\t// and close it after this node closes\r\n\t\t\t\t\tlet parent = n.parentNode;\r\n\t\t\t\t\tif(parent && parent.lastChild == n) {\r\n\t\t\t\t\t\tif(isBranch(n)) {\r\n\t\t\t\t\t\t\tif(!n.childNodes.length) {\r\n\t\t\t\t\t\t\t\tclose(n);\r\n\t\t\t\t\t\t\t\tclose(parent);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tclosers.set(n,parent);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tclose(parent);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcomplete(){\r\n\t\t\t\t$o.complete();\r\n\t\t\t},\r\n\t\t\terror(err) {\r\n\t\t\t\t$o.error(err);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport default traverseDOM;\r\n"],"file":"traverse-dom.js"}